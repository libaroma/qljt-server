user  nginx;
worker_processes  1;

# error_log  /var/log/nginx/error.log warn;
# pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}

http {
    gzip  on;#开启gzip
	gzip_min_length 1K;#低于1K的资源不压缩
	gzip_comp_level 3; #压缩级别[1-9]，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。
	gzip_types text/plain applicat ion/ javascript application/x- javascript text/javascript text/xml text/css; #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片，下面会讲为什么。
	gzip_disable "MSIE [1 -6]\."; #配置禁用gzip条件， 支持正则。 此处表示ie6及以下不启用gzip
	gzip_vary on;#是否添加"Vary: Accept- Encoding"响应头

	#Qljt服务器，多个可以实现负载均衡
    upstream qljt-server{
	   server 43.138.49.193:2020 weight=1;
    }

	#Qljt文件服务器，多个可以实现负载均衡
    upstream qljt-file-server{
       server 43.138.49.193:8080 weight=1;
    }

    include       mime.types;
    default_type  application/octet-stream;

    # log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                   '$status $body_bytes_sent "$http_referer" '
    #                   '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;



	server {
		listen       80;
		listen       443 ssl;
		server_name  qljt.hyz.cool;


   		ssl_certificate      qljt.hyz.cool.pem; # https的证书文件路径
   		ssl_certificate_key  qljt.hyz.cool.key; # https的证书文件路径
    		ssl_session_timeout  5m;
    		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    		# 这里是腾讯云的配置，阿里云的ssl_ciphers请上阿里云查看
    		ssl_prefer_server_ciphers on;

		#其他访问访问根目录wwwroot
		location / {
		    root   /usr/share/nginx/wwwroot/html;
			index index.html index.htm index.php;
		}

        #用户相关的请求，转到qljt-file-server
        location ^~ /files/upload/ {
          proxy_pass   http://qljt-file-server;
        }

        location ^~ /files/qr-code/ {
          proxy_pass   http://qljt-file-server;
        }

        location ^~ /files/file/ {
          root  /usr/app/;
        }
		#用户相关的请求，转到qljt-server
		location ^~/api/ {
            proxy_pass   http://qljt-server;
			#以下是一些反向代理的配置可删除
			proxy_redirect             off;
			#后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
			proxy_set_header           Host $host;
			proxy_set_header 		   Cookie $http_cookie;
			proxy_set_header           X-Real-IP $remote_addr;
			proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header           HTTP_X_FORWARDED_FOR $remote_addr;
			proxy_set_header           X-Forwarded-Server $host;
        }

      error_page  500 502 503 504  /uss/share/nginx/wwwroot/html/404/normal;
      error_page  403 404  /usr/share/nginx/wwwroot/html/404/normal;
	}
}
